{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/nam/OneDrive/M\\xE1y t\\xEDnh/New folder/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/nam/OneDrive/M\\xE1y t\\xEDnh/New folder/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport globalService from \"@/services/global.service\";\nimport administratorAPI from \"@/views/modules/administrator/administrator.api\";\nexport default {\n  name: \"UserChipVue\",\n  props: {\n    item: {}\n  },\n  data: function data() {\n    return {\n      m_item: {}\n    };\n  },\n  watch: {\n    item: function item(value) {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _this.update(value);\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    }\n  },\n  mounted: function mounted() {\n    var _this2 = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _this2.update(_this2.item);\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }))();\n  },\n  methods: {\n    update: function update(value) {\n      var _this3 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return globalService.getData_Async(administratorAPI.API_GetUserInfo(value.id));\n\n              case 3:\n                response = _context3.sent;\n\n                if (!(!response || !response.state)) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\");\n\n              case 6:\n                _this3.m_item = response.data;\n                _context3.next = 13;\n                break;\n\n              case 9:\n                _context3.prev = 9;\n                _context3.t0 = _context3[\"catch\"](0);\n                console.log(_context3.t0);\n                _this3.m_item = value;\n\n              case 13:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[0, 9]]);\n      }))();\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;AAgBA;AACA;AAEA;EACAA,mBADA;EAEAC;IAAAC;EAAA,CAFA;EAGAC,IAHA,kBAGA;IACA;MACAC;IADA;EAGA,CAPA;EAQAC;IACAH,IADA,gBACAI,KADA,EACA;MAAA;;MAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACA,mBADA;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAEA;EAHA,CARA;EAaAC,OAbA,qBAaA;IAAA;;IAAA;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA,OACA,0BADA;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;EAEA,CAfA;EAgBAC;IACAC,MADA,kBACAH,KADA,EACA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA;gBAAA,OAGAI,4BACAC,0CADA,CAHA;;cAAA;gBAGAC,QAHA;;gBAAA,MAMA,4BANA;kBAAA;kBAAA;gBAAA;;gBAAA;;cAAA;gBASA;gBATA;gBAAA;;cAAA;gBAAA;gBAAA;gBAWAC;gBACA;;cAZA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAcA;EAfA;AAhBA","names":["name","props","item","data","m_item","watch","value","mounted","methods","update","globalService","administratorAPI","response","console"],"sourceRoot":"src/components","sources":["UserChip.vue"],"sourcesContent":["<template>\r\n\t<v-chip color=\"white\">\r\n\t\t<v-avatar left color=\"red darken-2\">\r\n\t\t\t<v-icon color=\"white\">\r\n\t\t\t\t{{\r\n\t\t\t\t\tm_item\r\n\t\t\t\t\t\t? getAvatarText(m_item.fullName)\r\n\t\t\t\t\t\t: \"mdi-account-circle\"\r\n\t\t\t\t}}\r\n\t\t\t</v-icon>\r\n\t\t</v-avatar>\r\n\t\t{{ `${m_item.fullName}` }}\r\n\t</v-chip>\r\n</template>\r\n\r\n<script>\r\nimport globalService from \"@/services/global.service\";\r\nimport administratorAPI from \"@/views/modules/administrator/administrator.api\";\r\n\r\nexport default {\r\n\tname: \"UserChipVue\",\r\n\tprops: { item: {} },\r\n\tdata() {\r\n\t\treturn {\r\n\t\t\tm_item: {},\r\n\t\t};\r\n\t},\r\n\twatch: {\r\n\t\tasync item(value) {\r\n\t\t\tawait this.update(value);\r\n\t\t},\r\n\t},\r\n\tasync mounted() {\r\n\t\tawait this.update(this.item);\r\n\t},\r\n\tmethods: {\r\n\t\tasync update(value) {\r\n\t\t\tlet response;\r\n\t\t\ttry {\r\n\t\t\t\tresponse = await globalService.getData_Async(\r\n\t\t\t\t\tadministratorAPI.API_GetUserInfo(value.id),\r\n\t\t\t\t);\r\n\t\t\t\tif (!response || !response.state) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tthis.m_item = response.data;\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t\tthis.m_item = value;\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n};\r\n</script>\r\n\r\n<style></style>\r\n"]},"metadata":{},"sourceType":"module"}