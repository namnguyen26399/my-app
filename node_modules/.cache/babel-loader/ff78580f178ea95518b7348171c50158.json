{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/nam/OneDrive/M\\xE1y t\\xEDnh/New folder/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/nam/OneDrive/M\\xE1y t\\xEDnh/New folder/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport constant from \"@/common/constant\";\nexport default {\n  name: \"TreeItemVue\",\n  props: {\n    item: Object\n  },\n  data: function data() {\n    return {\n      isOpen: false\n    };\n  },\n  watch: {\n    item: function item() {\n      this.isOpen = false;\n    }\n  },\n  computed: {\n    isFolder: function isFolder() {\n      return this.item && this.item.children && this.item.children.length;\n    }\n  },\n  mounted: function mounted() {\n    this.m_item = this.item;\n  },\n  methods: {\n    toggle: function toggle() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this.isOpen = !_this.isOpen;\n\n                _this.$emit(constant.keys.toggle, _this.item);\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    select: function select() {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _this2.$emit(constant.keys.select, _this2.item);\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6CA;AACA;EACAA,mBADA;EAEAC;IACAC;EADA,CAFA;EAKAC;IACA;MACAC;IADA;EAGA,CATA;EAUAC;IACAH,IADA,kBACA;MACA;IACA;EAHA,CAVA;EAeAI;IACAC;MACA;IACA;EAHA,CAfA;EAoBAC,OApBA,qBAoBA;IACA;EACA,CAtBA;EAuBAC;IACAC,MADA,oBACA;MAAA;;MAAA;QAAA;UAAA;YAAA;cAAA;gBACA;;gBACA;;cAFA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAGA,CAJA;IAKAC,MALA,oBAKA;MAAA;;MAAA;QAAA;UAAA;YAAA;cAAA;gBACA;;cADA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAEA;EAPA;AAvBA","names":["name","props","item","data","isOpen","watch","computed","isFolder","mounted","methods","toggle","select"],"sourceRoot":"src/components","sources":["TreeItem.vue"],"sourcesContent":["<template>\r\n\t<li>\r\n\t\t<v-list-item v-if=\"!isFolder\" @click=\"select\" class=\"cursor-pointer\">\r\n\t\t\t<v-list-item-icon>\r\n\t\t\t\t<v-icon v-if=\"!item.isFolder\">{{\r\n\t\t\t\t\tm_files_icon[item.contentType]\r\n\t\t\t\t}}</v-icon>\r\n\t\t\t\t<v-icon v-else color=\"yellow darken-2\">{{\r\n\t\t\t\t\tm_files_icon[\"\"]\r\n\t\t\t\t}}</v-icon>\r\n\t\t\t</v-list-item-icon>\r\n\t\t\t<v-list-item-title>\r\n\t\t\t\t{{ item.fileName }}\r\n\t\t\t</v-list-item-title>\r\n\t\t</v-list-item>\r\n\t\t<v-divider v-if=\"!isFolder\"></v-divider>\r\n\t\t<v-list-group v-if=\"isFolder\" @click=\"toggle\">\r\n\t\t\t<template v-slot:activator>\r\n\t\t\t\t<v-list-item-icon>\r\n\t\t\t\t\t<v-icon v-if=\"!item.isFolder\">\r\n\t\t\t\t\t\t{{ m_files_icon[item.contentType] }}\r\n\t\t\t\t\t</v-icon>\r\n\t\t\t\t\t<v-icon v-else-if=\"isOpen\">\r\n\t\t\t\t\t\tmdi-folder-open-outline\r\n\t\t\t\t\t</v-icon>\r\n\t\t\t\t\t<v-icon v-else color=\"yellow darken-2\">\r\n\t\t\t\t\t\t{{ m_files_icon[\"\"] }}\r\n\t\t\t\t\t</v-icon>\r\n\t\t\t\t</v-list-item-icon>\r\n\t\t\t\t<v-list-item-title>{{ item.fileName }}</v-list-item-title>\r\n\t\t\t</template>\r\n\t\t\t<ul>\r\n\t\t\t\t<tree-item\r\n\t\t\t\t\tv-for=\"(child, index) in item.children\"\r\n\t\t\t\t\t:key=\"index\"\r\n\t\t\t\t\t:item=\"child\"\r\n\t\t\t\t\t@toggle=\"$emit('toggle', $event)\"\r\n\t\t\t\t\t@select=\"$emit('select', $event)\"\r\n\t\t\t\t></tree-item>\r\n\t\t\t</ul>\r\n\t\t</v-list-group>\r\n\t</li>\r\n</template>\r\n\r\n<script>\r\nimport constant from \"@/common/constant\";\r\nexport default {\r\n\tname: \"TreeItemVue\",\r\n\tprops: {\r\n\t\titem: Object,\r\n\t},\r\n\tdata: function () {\r\n\t\treturn {\r\n\t\t\tisOpen: false,\r\n\t\t};\r\n\t},\r\n\twatch: {\r\n\t\titem() {\r\n\t\t\tthis.isOpen = false;\r\n\t\t},\r\n\t},\r\n\tcomputed: {\r\n\t\tisFolder: function () {\r\n\t\t\treturn this.item && this.item.children && this.item.children.length;\r\n\t\t},\r\n\t},\r\n\tmounted() {\r\n\t\tthis.m_item = this.item;\r\n\t},\r\n\tmethods: {\r\n\t\tasync toggle() {\r\n\t\t\tthis.isOpen = !this.isOpen;\r\n\t\t\tthis.$emit(constant.keys.toggle, this.item);\r\n\t\t},\r\n\t\tasync select() {\r\n\t\t\tthis.$emit(constant.keys.select, this.item);\r\n\t\t},\r\n\t},\r\n};\r\n</script>\r\n\r\n<style></style>\r\n"]},"metadata":{},"sourceType":"module"}