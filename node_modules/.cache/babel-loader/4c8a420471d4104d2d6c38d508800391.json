{"ast":null,"code":"import _typeof from \"C:/Users/nam/OneDrive/M\\xE1y t\\xEDnh/New folder/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport _objectSpread from \"C:/Users/nam/OneDrive/M\\xE1y t\\xEDnh/New folder/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.split.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.regexp.constructor.js\";\nimport \"core-js/modules/es.regexp.dot-all.js\";\nimport \"core-js/modules/es.regexp.sticky.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\n// Some util functions around schema manipulation to reduce size of the Property component\nimport copy from 'fast-copy';\nvar schemaUtils = {};\nexport default schemaUtils;\n\nvar objectToArray = function objectToArray(obj) {\n  return Object.keys(obj || {}).map(function (key) {\n    return _objectSpread(_objectSpread({}, obj[key]), {}, {\n      key: key\n    });\n  });\n};\n\nvar getDeepKey = function getDeepKey(obj, key) {\n  var keys = key.split('.');\n\n  for (var i = 0; i < keys.length; i++) {\n    if ([null, undefined].includes(obj)) break;\n    obj = obj[keys[i]];\n  }\n\n  return obj;\n};\n\nvar extendSchema = function extendSchema(schema, subSchema) {\n  schema.required = schema.required.concat(subSchema.required || []);\n  schema.properties = schema.properties.concat(objectToArray(subSchema.properties));\n  if (subSchema.oneOf) schema.oneOf = (schema.oneOf || []).concat(subSchema.oneOf);\n  if (subSchema.allOf) schema.allOf = (schema.allOf || []).concat(subSchema.allOf);\n};\n\nschemaUtils.prepareFullSchema = function (schema, value, options) {\n  var fullSchema = copy(schema);\n  if (fullSchema.pattern) fullSchema.patternRegexp = new RegExp(fullSchema.pattern);\n  if (!fullSchema.type && fullSchema.properties) fullSchema.type = 'object'; // detect type from combination info\n\n  if (!fullSchema.type) {\n    var combination = fullSchema.anyOf || fullSchema.oneOf || fullSchema.allOf;\n    var typedCombinationItem = combination && combination.find(function (c) {\n      return !!c.type;\n    });\n    if (typedCombinationItem) fullSchema.type = typedCombinationItem.type;\n  } // manage null type in an array, for example ['string', 'null']\n\n\n  if (Array.isArray(fullSchema.type)) {\n    fullSchema.nullable = fullSchema.type.includes('null');\n    fullSchema.type = fullSchema.type.find(function (t) {\n      return t !== 'null';\n    });\n    if (fullSchema.nullable && fullSchema.enum) fullSchema.enum = fullSchema.enum.filter(function (v) {\n      return v !== null;\n    });\n  } // add index as key in case of tuples\n\n\n  if (fullSchema.items && Array.isArray(fullSchema.items)) {\n    fullSchema.items.forEach(function (item, i) {\n      item.key = '' + i;\n    });\n  } // enum with a single item can be used as another way to express const\n\n\n  if (fullSchema.enum && fullSchema.enum.length === 1) {\n    fullSchema.const = fullSchema.enum[0];\n    delete fullSchema.enum;\n  }\n\n  if (fullSchema.type !== 'object') return fullSchema; // Properties as array for easier loops\n\n  fullSchema.properties = objectToArray(fullSchema.properties);\n  fullSchema.required = fullSchema.required || [];\n  fullSchema.dependencies = fullSchema.dependencies || {}; // Extend schema based on satisfied dependencies\n\n  if (fullSchema.dependencies) {\n    Object.keys(fullSchema.dependencies).forEach(function (depKey) {\n      var dep = fullSchema.dependencies[depKey]; // cases where dependency does not apply\n\n      if (!value) return;\n      var val = getDeepKey(value, depKey);\n      if ([null, undefined, false].includes(val)) return;\n      if (Array.isArray(val) && val.length === 0) return;\n      if (_typeof(val) === 'object' && Object.keys(val).length === 0) return; // dependency applies\n\n      extendSchema(fullSchema, dep);\n    });\n  } // extend schema based on conditions\n\n\n  if (fullSchema.if) {\n    if (!options.validator) {\n      console.error('v-jsf - The conditional if/then/else syntax requires the ajv or other validator option.');\n    } else {\n      // TODO: store this somewhere so that it is not re-compiled many times\n      var validate = options.validator(fullSchema.if);\n      var error = validate(value);\n\n      if (!error && fullSchema.then) {\n        extendSchema(fullSchema, fullSchema.then);\n      }\n\n      if (error && fullSchema.else) {\n        extendSchema(fullSchema, fullSchema.else);\n      }\n    }\n  }\n\n  return fullSchema;\n};","map":{"version":3,"names":["copy","schemaUtils","objectToArray","obj","Object","keys","map","key","getDeepKey","split","i","length","undefined","includes","extendSchema","schema","subSchema","required","concat","properties","oneOf","allOf","prepareFullSchema","value","options","fullSchema","pattern","patternRegexp","RegExp","type","combination","anyOf","typedCombinationItem","find","c","Array","isArray","nullable","t","enum","filter","v","items","forEach","item","const","dependencies","depKey","dep","val","if","validator","console","error","validate","then","else"],"sources":["C:/Users/nam/OneDrive/Máy tính/New folder/node_modules/@koumoul/vjsf/lib/utils/schema.js"],"sourcesContent":["// Some util functions around schema manipulation to reduce size of the Property component\nimport copy from 'fast-copy'\n\nconst schemaUtils = {}\n\nexport default schemaUtils\n\nconst objectToArray = (obj) => Object.keys(obj || {}).map(key => ({ ...obj[key], key }))\n\nconst getDeepKey = (obj, key) => {\n  const keys = key.split('.')\n  for (let i = 0; i < keys.length; i++) {\n    if ([null, undefined].includes(obj)) break\n    obj = obj[keys[i]]\n  }\n  return obj\n}\n\nconst extendSchema = (schema, subSchema) => {\n  schema.required = schema.required.concat(subSchema.required || [])\n  schema.properties = schema.properties.concat(objectToArray(subSchema.properties))\n  if (subSchema.oneOf) schema.oneOf = (schema.oneOf || []).concat(subSchema.oneOf)\n  if (subSchema.allOf) schema.allOf = (schema.allOf || []).concat(subSchema.allOf)\n}\n\nschemaUtils.prepareFullSchema = (schema, value, options) => {\n  const fullSchema = copy(schema)\n\n  if (fullSchema.pattern) fullSchema.patternRegexp = new RegExp(fullSchema.pattern)\n\n  if (!fullSchema.type && fullSchema.properties) fullSchema.type = 'object'\n\n  // detect type from combination info\n  if (!fullSchema.type) {\n    const combination = fullSchema.anyOf || fullSchema.oneOf || fullSchema.allOf\n    const typedCombinationItem = combination && combination.find(c => !!c.type)\n    if (typedCombinationItem) fullSchema.type = typedCombinationItem.type\n  }\n\n  // manage null type in an array, for example ['string', 'null']\n  if (Array.isArray(fullSchema.type)) {\n    fullSchema.nullable = fullSchema.type.includes('null')\n    fullSchema.type = fullSchema.type.find(t => t !== 'null')\n    if (fullSchema.nullable && fullSchema.enum) fullSchema.enum = fullSchema.enum.filter(v => v !== null)\n  }\n\n  // add index as key in case of tuples\n  if (fullSchema.items && Array.isArray(fullSchema.items)) {\n    fullSchema.items.forEach((item, i) => {\n      item.key = '' + i\n    })\n  }\n\n  // enum with a single item can be used as another way to express const\n  if (fullSchema.enum && fullSchema.enum.length === 1) {\n    fullSchema.const = fullSchema.enum[0]\n    delete fullSchema.enum\n  }\n\n  if (fullSchema.type !== 'object') return fullSchema\n\n  // Properties as array for easier loops\n  fullSchema.properties = objectToArray(fullSchema.properties)\n  fullSchema.required = fullSchema.required || []\n  fullSchema.dependencies = fullSchema.dependencies || {}\n\n  // Extend schema based on satisfied dependencies\n  if (fullSchema.dependencies) {\n    Object.keys(fullSchema.dependencies).forEach(depKey => {\n      const dep = fullSchema.dependencies[depKey]\n      // cases where dependency does not apply\n      if (!value) return\n      const val = getDeepKey(value, depKey)\n      if ([null, undefined, false].includes(val)) return\n      if (Array.isArray(val) && val.length === 0) return\n      if (typeof val === 'object' && Object.keys(val).length === 0) return\n\n      // dependency applies\n      extendSchema(fullSchema, dep)\n    })\n  }\n\n  // extend schema based on conditions\n  if (fullSchema.if) {\n    if (!options.validator) {\n      console.error('v-jsf - The conditional if/then/else syntax requires the ajv or other validator option.')\n    } else {\n      // TODO: store this somewhere so that it is not re-compiled many times\n      const validate = options.validator(fullSchema.if)\n      const error = validate(value)\n      if (!error && fullSchema.then) {\n        extendSchema(fullSchema, fullSchema.then)\n      }\n      if (error && fullSchema.else) {\n        extendSchema(fullSchema, fullSchema.else)\n      }\n    }\n  }\n  return fullSchema\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}