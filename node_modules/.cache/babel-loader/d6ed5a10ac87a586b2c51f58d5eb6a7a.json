{"ast":null,"code":"import _toConsumableArray from \"C:/Users/nam/OneDrive/M\\xE1y t\\xEDnh/New folder/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _objectSpread from \"C:/Users/nam/OneDrive/M\\xE1y t\\xEDnh/New folder/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _regeneratorRuntime from \"C:/Users/nam/OneDrive/M\\xE1y t\\xEDnh/New folder/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/nam/OneDrive/M\\xE1y t\\xEDnh/New folder/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.split.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.map.js\";\n\nvar getFileDataUrl = function getFileDataUrl(file) {\n  return new Promise(function (resolve) {\n    var reader = new FileReader();\n\n    reader.onload = function () {\n      return resolve(reader.result);\n    };\n\n    reader.readAsDataURL(file);\n  });\n};\n\nvar getFileResult = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(file, schema, filesAsDataUrl) {\n    var data, dataUrl;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            data = file;\n\n            if (!(schema.type === 'string' || schema.properties && schema.properties.data && schema.properties.data.type === 'string')) {\n              _context.next = 6;\n              break;\n            }\n\n            _context.next = 4;\n            return getFileDataUrl(file);\n\n          case 4:\n            dataUrl = _context.sent;\n            data = filesAsDataUrl ? dataUrl : dataUrl.split(';base64,')[1];\n\n          case 6:\n            if (!(schema.type === 'string')) {\n              _context.next = 8;\n              break;\n            }\n\n            return _context.abrupt(\"return\", data);\n\n          case 8:\n            return _context.abrupt(\"return\", {\n              name: file.name,\n              lastModified: new Date(file.lastModified).toISOString(),\n              size: file.size,\n              type: file.type,\n              data: data\n            });\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getFileResult(_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default {\n  computed: {\n    isFileProp: function isFileProp() {\n      if (!this.fullSchema) return;\n      if (this.fullSchema.type === 'string' && (this.fullSchema.contentMediaType || this.display === 'file')) return true;\n      if (this.fullSchema.type === 'array' && this.fullSchema.items && this.fullSchema.items.type === 'string' && (this.fullSchema.items.contentMediaType || this.display === 'file' || this.fullSchema.items['x-display'] === 'file')) return true;\n      if (this.fullSchema.type === 'object' && (this.fullSchema.contentMediaType || this.display === 'file')) return true;\n      if (this.fullSchema.type === 'array' && this.fullSchema.items && this.fullSchema.items.type === 'object' && (this.fullSchema.items.contentMediaType || this.display === 'file' || this.fullSchema.items['x-display'] === 'file')) return true;\n      return false;\n    }\n  },\n  watch: {\n    isFileProp: function isFileProp() {\n      if (this.isFileProp && !this.fullSchema.writeOnly) {\n        console.warn('File property should always be used with writeOnly attribute. Files are uploaded but not read in existing data.');\n      }\n    }\n  },\n  methods: {\n    renderFileProp: function renderFileProp(h) {\n      var _this = this;\n\n      if (!this.isFileProp) return;\n\n      var props = _objectSpread(_objectSpread({}, this.commonFieldProps), this.fullOptions.fileInputProps);\n\n      delete props.value;\n      var attrs = {};\n      if (this.fullSchema.contentMediaType) attrs.accept = this.fullSchema.contentMediaType;\n      if (this.fullSchema.items && this.fullSchema.items.contentMediaType) attrs.accept = this.fullSchema.items.contentMediaType;\n      if (this.fullSchema.type === 'array') attrs.multiple = true;\n\n      var children = _toConsumableArray(this.renderPropSlots(h));\n\n      var on = {\n        change: function () {\n          var _change = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(files) {\n            var contents, content;\n            return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n              while (1) {\n                switch (_context2.prev = _context2.next) {\n                  case 0:\n                    if (!(_this.fullSchema.type === 'array')) {\n                      _context2.next = 8;\n                      break;\n                    }\n\n                    _context2.next = 3;\n                    return Promise.all(files.map(function (file) {\n                      return getFileResult(file, _this.fullSchema.items, _this.fullOptions.filesAsDataUrl);\n                    }));\n\n                  case 3:\n                    contents = _context2.sent;\n\n                    _this.input(contents);\n\n                    _this.change();\n\n                    _context2.next = 13;\n                    break;\n\n                  case 8:\n                    _context2.next = 10;\n                    return getFileResult(files, _this.resolvedSchema, _this.fullOptions.filesAsDataUrl);\n\n                  case 10:\n                    content = _context2.sent;\n\n                    _this.input(content);\n\n                    _this.change();\n\n                  case 13:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }\n            }, _callee2);\n          }));\n\n          function change(_x4) {\n            return _change.apply(this, arguments);\n          }\n\n          return change;\n        }()\n      };\n\n      if (this.htmlDescription) {\n        children.push(this.renderTooltip(h, 'append-outer'));\n      }\n\n      return [h('v-file-input', {\n        props: props,\n        attrs: attrs,\n        on: on,\n        scopedSlots: this.$scopedSlots\n      }, children)];\n    }\n  }\n};","map":{"version":3,"names":["getFileDataUrl","file","Promise","resolve","reader","FileReader","onload","result","readAsDataURL","getFileResult","schema","filesAsDataUrl","data","type","properties","dataUrl","split","name","lastModified","Date","toISOString","size","computed","isFileProp","fullSchema","contentMediaType","display","items","watch","writeOnly","console","warn","methods","renderFileProp","h","props","commonFieldProps","fullOptions","fileInputProps","value","attrs","accept","multiple","children","renderPropSlots","on","change","files","all","map","contents","input","resolvedSchema","content","htmlDescription","push","renderTooltip","scopedSlots","$scopedSlots"],"sources":["C:/Users/nam/OneDrive/Máy tính/New folder/node_modules/@koumoul/vjsf/lib/mixins/FileProperty.js"],"sourcesContent":["const getFileDataUrl = (file) => {\n  return new Promise(resolve => {\n    const reader = new FileReader()\n    reader.onload = () => resolve(reader.result)\n    reader.readAsDataURL(file)\n  })\n}\n\nconst getFileResult = async (file, schema, filesAsDataUrl) => {\n  let data = file\n  if (schema.type === 'string' || (schema.properties && schema.properties.data && schema.properties.data.type === 'string')) {\n    const dataUrl = await getFileDataUrl(file)\n    data = filesAsDataUrl ? dataUrl : dataUrl.split(';base64,')[1]\n  }\n  if (schema.type === 'string') return data\n  return {\n    name: file.name,\n    lastModified: new Date(file.lastModified).toISOString(),\n    size: file.size,\n    type: file.type,\n    data\n  }\n}\n\nexport default {\n  computed: {\n    isFileProp() {\n      if (!this.fullSchema) return\n      if (this.fullSchema.type === 'string' &&\n        (this.fullSchema.contentMediaType || this.display === 'file')) return true\n      if (this.fullSchema.type === 'array' && this.fullSchema.items && this.fullSchema.items.type === 'string' &&\n        (this.fullSchema.items.contentMediaType || this.display === 'file' || this.fullSchema.items['x-display'] === 'file')) return true\n      if (this.fullSchema.type === 'object' &&\n        (this.fullSchema.contentMediaType || this.display === 'file')) return true\n      if (this.fullSchema.type === 'array' && this.fullSchema.items && this.fullSchema.items.type === 'object' &&\n        (this.fullSchema.items.contentMediaType || this.display === 'file' || this.fullSchema.items['x-display'] === 'file')) return true\n      return false\n    }\n  },\n  watch: {\n    isFileProp() {\n      if (this.isFileProp && !this.fullSchema.writeOnly) {\n        console.warn('File property should always be used with writeOnly attribute. Files are uploaded but not read in existing data.')\n      }\n    }\n  },\n  methods: {\n    renderFileProp(h) {\n      if (!this.isFileProp) return\n      const props = { ...this.commonFieldProps, ...this.fullOptions.fileInputProps }\n      delete props.value\n      const attrs = {}\n      if (this.fullSchema.contentMediaType) attrs.accept = this.fullSchema.contentMediaType\n      if (this.fullSchema.items && this.fullSchema.items.contentMediaType) attrs.accept = this.fullSchema.items.contentMediaType\n      if (this.fullSchema.type === 'array') attrs.multiple = true\n      const children = [...this.renderPropSlots(h)]\n      const on = {\n        change: async files => {\n          if (this.fullSchema.type === 'array') {\n            const contents = await Promise.all(files.map(file => getFileResult(file, this.fullSchema.items, this.fullOptions.filesAsDataUrl)))\n            this.input(contents)\n            this.change()\n          } else {\n            const content = await getFileResult(files, this.resolvedSchema, this.fullOptions.filesAsDataUrl)\n            this.input(content)\n            this.change()\n          }\n        }\n      }\n      if (this.htmlDescription) {\n        children.push(this.renderTooltip(h, 'append-outer'))\n      }\n\n      return [h('v-file-input', { props, attrs, on, scopedSlots: this.$scopedSlots }, children)]\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}